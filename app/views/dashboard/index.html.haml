%h1 Listing emotions


:javascript
  $(document).ready(function(){
      var $container = $('#iconfield');
      $container.isotope({
          filter: '*',
          animationOptions: {
              duration: 750,
              easing: 'linear',
              queue: false,
          }
      });
  });

  $('a.btn.btn-large.btn-block.btn-default').click(function(){
    var selector = $(this).attr('datafilter');
    $container.isotope({ filter: selector });
    return false;
  });

.row.demo-row
  .navbar.navbar-inverse
    .navbar-inner
      .container
        %ul.dashboard-nav
          %li
            %a{:href => "#"}
              Me
          %li
            %a{:href => "#"}
              Followers

.container
  .row
    .span3
      %ul
        %li.todo-done
          .todo-content
            %h.todo-name
              Filters
        %li
          .todo-content
            %h4.todo-name
              Week
            %strong All tweets from the last month
        %li
          .todo-content
            %h4.todo-name
              Month
            %strong All tweets from the last month
        %li
          .todo-content
            %h4.todo-name
              Year
            %strong All tweets from the last year

    .span9
      .row
        %div#emotion-icon-nav
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter =>"*"} All
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-joy"} Joy
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-sadness"} Sadness
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-anger"} Anger
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-surprise"} Surprise
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-disgust"} Disgust
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-fear"} Fear
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "", :datafilter => "#iconfield.emotion-uncertain"} Other

      .row
        %div#iconfield
          - @followers.each do |follower|
            - follower.follower_tweets.each do |tweet|
              -if tweet.emotion == "joy"
                %div.emotion-joy
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-sun-flower
                        %dt= follower.name
                        %dd= tweet.emotion
              -elsif tweet.emotion == "anger"
                %div.emotion-anger
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-pomegranate
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "surprise"
                %div.emotion-surprise
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-turquoise
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "fear"
                %div.emotion-fear
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-wet-asphalt
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "sadness"
                %div.emotion-sadness
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-amethyst
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "disgust"
                %div.emotion-disgust
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-pumpkin
                        %dt= follower.name
                        %dd= tweet.emotion
              -else tweet.emotion == "uncertain"
                %div.emotion-uncertain
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-silver
                        %dt= follower.name
                        %dd Other

/ :javascript
/   $(function(){

/     var $container = $('#iconfield');

/     $container.isotope({
/       itemSelector : '.element'
/     });


/     var $optionSets = $('#options .option-set'),
/         $optionLinks = $optionSets.find('a');

/     $optionLinks.click(function(){
/       var $this = $(this);
/       // don't proceed if already selected
/       if ( $this.hasClass('selected') ) {
/         return false;
/       }
/       var $optionSet = $this.parents('.option-set');
/       $optionSet.find('.selected').removeClass('selected');
/       $this.addClass('selected');

/       // make option object dynamically, i.e. { filter: '.my-filter-class' }
/       var options = {},
/           key = $optionSet.attr('data-option-key'),
/           value = $this.attr('data-option-value');
/       // parse 'false' as false boolean
/       value = value === 'false' ? false : value;
/       options[ key ] = value;
/       if ( key === 'layoutMode' && typeof changeLayoutMode === 'function' ) {
/         // changes in layout modes need extra logic
/         changeLayoutMode( $this, options )
/       } else {
/         // otherwise, apply new options
/         $container.isotope( options );
/       }

/       return false;
/     });


/   });
