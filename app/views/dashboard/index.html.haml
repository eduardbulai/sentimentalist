%h1 Listing emotions

.row.demo-row
  .navbar.navbar-inverse
    .navbar-inner
      .container
        %ul.dashboard-nav
          %li
            %a{:href => "#"}
              Me
          %li
            %a{:href => "#"}
              Followers

.container
  .row
    .filter.option-set{:datafiltergroup => "timefilter"}
      .span3
        %ul
          %a.btn{:href => "#", :datafilter => ".week"}
            Week
          %a.btn{:href => "#", :datafilter => ".month"}
            Month
          %a.btn{:href => "#", :datafilter => ".year"}
            Year

    .span9
      .row
        .filter.option-set{:datafiltergroup => "category"}
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter =>""} All
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-joy"} Joy
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-sadness"} Sadness
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-anger"} Anger
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-surprise"} Surprise
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-disgust"} Disgust
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-fear"} Fear
          .span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-uncertain"} Other

      .row
        %div#iconfield
          - @followers.each do |follower|
            %div(class = "emot emotion-#{follower.emotion_week} week")
              %div.span2
                %div.emotion-icon
                  %dl(class = "palette palette-#{follower.emotion_week}")
                    %dt= follower.name
                    -if follower.emotion_week == "uncertain"
                      %dd Other
                    -else
                      %dd= follower.emotion_week
            %div(class = "emot emotion-#{follower.emotion_month} month")
              %div.span2
                %div.emotion-icon
                  %dl(class = "palette palette-#{follower.emotion_month}")
                    %dt= follower.name
                    -if follower.emotion_month == "uncertain"
                      %dd Other
                    -else
                      %dd= follower.emotion_month
            %div(class = "emot emotion-#{follower.emotion_year} year")
              %div.span2
                %div.emotion-icon
                  %dl(class = "palette palette-#{follower.emotion_year}")
                    %dt= follower.name
                    -if follower.emotion_year == "uncertain"
                      %dd Other
                    -else
                      %dd= follower.emotion_year


:javascript
// jquery-isotope-example.js

  $(document).ready(init);

  function init() {
      var things = $('#iconfield');
      filters = {};

      things.isotope({
          itemSelector : '.emot'
      });

      // when everything loads, make the "all" options selected
      $('.filter a[datafiltervalue=""]').addClass('selected');

      // filter buttons
      $('.filter a').click(
      function(e){
          e.preventDefault();
          var clicked_filter = $(this);

          // if the clicked link is already selected, don't do anything
          if ( clicked_filter.hasClass('selected') ) {
              return;
          }

          var optionSet = clicked_filter.parents('.option-set');

          // get rid of the ".selected" class on any links in this group and put it on the clicked link
          optionSet.find('.selected').removeClass('selected');
          clicked_filter.addClass('selected');

          // store the filters in the filters object, indexed by the group they're in
          // i.e. filters.category = 'animal'
          var group = optionSet.attr('datafiltergroup');
          filters[ group ] = clicked_filter.attr('datafilter');

          // convert the filters object into an array of strings which are CSS class selectors
          var filters_to_use = [];
          for ( var group in filters ) {
               filters_to_use.push( filters[ group ] );
          }

          // smash the array together to get a big selector which will filter all elements with the filter classes
          var selector = filters_to_use.join('');

          // run the filter on the isotope element
          things.isotope({ filter: selector });
      }
    );
  }

