%h1 Listing emotions

.row.demo-row
  .navbar.navbar-inverse
    .navbar-inner
      .container
        %ul.dashboard-nav
          %li
            %a{:href => "#"}
              Me
          %li
            %a{:href => "#"}
              Followers

.container
  .row
    .span3
      %ul
        %li.todo-done
          .todo-content
            %h.todo-name
              Filters
        %li
          .todo-content
            %h4.todo-name
              Week
            %strong All tweets from the last month
        %li
          .todo-content
            %h4.todo-name
              Month
            %strong All tweets from the last month
        %li
          .todo-content
            %h4.todo-name
              Year
            %strong All tweets from the last year

    .span9
      .row
        %ul.filter.option-set{:datafiltergroup => "category"}
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter =>""} All
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-joy"} Joy
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-sadness"} Sadness
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-anger"} Anger
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-surprise"} Surprise
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-disgust"} Disgust
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-fear"} Fear
          %li.span2.emotion-icon-filter
            %a.btn.btn-large.btn-block.btn-default{:href => "#", :datafilter => ".emotion-uncertain"} Other

      .row
        %div#iconfield
          - @followers.each do |follower|
            - follower.follower_tweets.each do |tweet|
              -if tweet.emotion == "joy"
                %div.emot.emotion-joy
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-sun-flower
                        %dt= follower.name
                        %dd= tweet.emotion
              -elsif tweet.emotion == "anger"
                %div.emot.emotion-anger
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-pomegranate
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "surprise"
                %div.emot.emotion-surprise
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-turquoise
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "fear"
                %div.emot.emotion-fear
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-wet-asphalt
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "sadness"
                %div.emot.emotion-sadness
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                %div.span2
                  %div.emotion-icon
                    %dl.palette.palette-amethyst
                      %dt= follower.name
                      %dd= tweet.emotion
              -elsif tweet.emotion == "disgust"
                %div.emot.emotion-disgust
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-pumpkin
                        %dt= follower.name
                        %dd= tweet.emotion
              -else tweet.emotion == "uncertain"
                %div.emot.emotion-uncertain
                  %div.datetime-tweeted
                  -tweet.datetime_tweeted
                  %div.span2
                    %div.emotion-icon
                      %dl.palette.palette-silver
                        %dt= follower.name
                        %dd Other


:javascript
// jquery-isotope-example.js

  $(document).ready(init);

  function init() {
      var things = $('#iconfield');
      filters = {};

      things.isotope({
          itemSelector : '.emot'
      });

      // when everything loads, make the "all" options selected
      $('.filter a[datafiltervalue=""]').addClass('selected');

      // filter buttons
      $('.filter a').click(
      function(e){
          e.preventDefault();
          var clicked_filter = $(this);

          // if the clicked link is already selected, don't do anything
          if ( clicked_filter.hasClass('selected') ) {
              return;
          }

          var optionSet = clicked_filter.parents('.option-set');

          // get rid of the ".selected" class on any links in this group and put it on the clicked link
          optionSet.find('.selected').removeClass('selected');
          clicked_filter.addClass('selected');

          // store the filters in the filters object, indexed by the group they're in
          // i.e. filters.category = 'animal'
          var group = optionSet.attr('datafiltergroup');
          filters[ group ] = clicked_filter.attr('datafilter');

          // convert the filters object into an array of strings which are CSS class selectors
          var filters_to_use = [];
          for ( var group in filters ) {
               filters_to_use.push( filters[ group ] );
          }

          // smash the array together to get a big selector which will filter all elements with the filter classes
          var selector = filters_to_use.join('');

          // run the filter on the isotope element
          things.isotope({ filter: selector });
      }
    );
  }

